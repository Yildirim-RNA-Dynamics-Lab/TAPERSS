Make a flag system using bit fields and test if I can use templates to implement options such as:
	-early exit (after N structures built exit -- This is for debugging)
	-N Lowest Energies
	-Structfilter Type (This is going to be deprecated (see below))
without needing to use if statements inside of the functions, maybe just make a wrapper template function that just coordinates which operations and conditions are set

Organize Main.cpp, remove functions which should be in input handler and implement suggestions I have in comments and improve the Run functions

Change RNADataArray to be inclusive of both IL functions and Single stranded functions b/c the differences are minor and just use templates to distinguish functions

Also rename IL functions to be DS (Double stranded) functions

Implement a way to specify whether predictions are double stranded or single stranded instead of the filter type.

Make it so that instead of filter type one can specify which specific nucleotides should be hydrogen bonded, so future filters are more robust and dynamic.
This is already partially implemented in the WatsonCrickPair functions, so now its just a matter of processing input to allow this "robust filter". For example:
	To specify that I want to make a double stranded stem region for sequence GGGGxCCCC, I would add use something like:
		"L1:R4, L2:R3, L3:R2, L4:R1" 
		which would specify that I want the sense (5'-3') (left of 'x' in specified sequence) strand's first nucleobase, (Resid 1) to be paired with the last residue
		(resid 2) of the antisense (3'-5') (right of the 'x' in specified sequence)
	For a single strand for sequence AGAAAU as a hairpin I would use:
		"1:6"
		to specifiy I want the first nucleotide to be paired with the last.


Split up main/ run.
	- first - read input with input handler and fill run_info struct
	- new function: initialize, which takes run_info struct to initialize data.
	- modify run: will only run requested run type
	- new function: finish, takes run_info struct and cleans up.
